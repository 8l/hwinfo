#! /usr/bin/perl

sub help;
sub show_entry;
sub split_it;

if(!@ARGV || $ARGV[0] eq '-h') {
  help;
  exit
}

@list = (<>);
push @list, "\n";

for (@list) {
  chomp;

  $debug = 1 if /============ start debug info ============/;
  $debug = 0 if /=========== end debug info ============/;

  next if $debug;

  if(/^\d+:\s+(\S+)\s+\S+:\s+(\S+)(\S{2})\s+(.*)/) {
    ($d{Bus}, $d{Class}, $d{SubClass}, $d{ClassName}) = ($1, $2, $3, $4);
    next;
  }

  if(/^\s*([^:]+):\s*(.*)/) {
    $d{$1} .= "\t" if exists $d{$1};
    $d{$1} .= $2;
    next;
  }

  if($_ eq "") {
    show_entry;
    undef %d;
    next;
  }
}


sub help
{
  print <<xxx
syntax: hw_list hw_log_file

output format:
  CPU entries:
    CPU  dev_class:dev_sub_class  arch  clock[MHz]  cache[kb]  vendor  model_name

  BIOS entries:
    BIOS  dev_class:dev_sub_class  eisa_id  video_mem[kb]  vesa_version

  other entries:
    bus_type  dev_class:dev_sub_class  vendor:device  sub_vendor:sub_device  revision  driver_info

  ISA-PnP entries:
    like "other entries" with 2 additional fields:
    ...  compat_vendor:compat_device  model_name

xxx
}

sub show_entry
{
  local $_;
  my($i, $j, $s, $t, $i1, $i2, $i3, $i4, $i5);

  $s = "";

  if($d{Bus} =~ /^PCI/) {
    $i1 = (split_it $d{Vendor})[0];
    $i2 = (split_it $d{Model})[0];
    $s .= "$i1:$i2  ";
    if($d{SubVendor}) {
      $i3 = (split_it $d{SubVendor})[0];
      $i4 = (split_it $d{SubDevice})[0];
      $s .= "$i3:$i4  "
    }
    else {
      $s .= "-          "
    }

    if($d{Revision}) {
      $s .= "$d{Revision}"
    }
    else {
      $s .= "-   "
    }

    if($d{"Device Driver Info"}) {
      $s .= "  known"
    }
    else {
      $i5 = $d{Class};
      if($i5 eq "06") {
        $s .= "  -    "
      }
      else {
        $s .= "  ?    "
      }
    }
  }

  if($d{Bus} =~ /^ISA/ && $d{Class} ne "101") {
    $i1 = (split_it $d{Vendor})[0];
    $i2 = (split_it $d{Model})[0];
    $s .= " $i1:$i2  ";
    if($d{SubVendor}) {
      $i3 = (split_it $d{SubVendor})[0];
      $i4 = (split_it $d{SubDevice})[0];
      $s .= " $i3:$i4  "
    }
    else {
      $s .= "-          "
    }

    if($d{Revision}) {
      $s .= "$d{Revision}"
    }
    else {
      $s .= "-   "
    }

    if($d{"Device Driver Info"}) {
      $s .= "  known"
    }
    else {
      $s .= "  ?    "
    }

    if($d{Bus} =~ /^ISA/) {
      if($d{"Comaptible to"}) {
        $i5 = (split_it $d{"Comaptible to"})[0];
        substr($i5, 3, 0) = ":";
        $s .= "  $i5"
      }
      else {
        $s .= "  -       "
      }

      if($d{Model} =~ /"(.+)"/) {
        $s .= "  \"$1\""
      }
      else {
        $s .= "  \"\""
      }

    }
  }

  if($d{Class} eq "100" || $d{Class} eq "105") {
    $i1 = (split_it $d{Vendor})[0];
    $i2 = (split_it $d{Model})[0];
    $s .= " $i1:$i2  ";
    if($d{SubVendor}) {
      $i3 = (split_it $d{SubVendor})[0];
      $i4 = (split_it $d{SubDevice})[0];
      $s .= " $i3:$i4  "
    }
    else {
      $s .= "-          "
    }

    if($d{Revision}) {
      $s .= "$d{Revision}"
    }
    else {
      $s .= "-   "
    }

    if($d{"Device Driver Info"}) {
      $s .= "  known"
    }
    else {
      $s .= "  ?    "
    }
  }

  if("$d{Class}$d{SubClass}" eq "10103") {
    $s .= sprintf "%-9s  ", $d{Arch};
    if($d{Clock}) {
      $s .= sprintf "%-9s  ", (split_it $d{Clock})[0]
    }
    else {
      $s .= sprintf "%-9s  ", "-"
    }

    if($d{Cache}) {
      $s .= sprintf "%-4s  ", (split_it $d{Cache})[0]
    }
    else {
      $s .= sprintf "%-4s  ", "-"
    }

    $s .= sprintf "%-15s", $d{Vendor};

    if($d{Model} =~ /"(.+)"/) {
      $s .= "  \"$1\""
    }
    else {
      $s .= "  \"\""
    }

  }

  if("$d{Class}$d{SubClass}" eq "10105") {
    $i1 = $d{"PnP BIOS"};
    substr($i1, 3, 0) = ":";
    $s .= sprintf "%9s  ", $i1;
    if($d{"Video Memory"}) {
      $s .= sprintf "%-9s  ", (split_it $d{"Video Memory"})[0]
    }
    else {
      $s .= sprintf "%-9s  ", "-"
    }

    if($d{"VESA BIOS Version"}) {
      $s .= sprintf "%-4s  ", (split_it $d{"VESA BIOS Version"})[0]
    }
    else {
      $s .= sprintf "%-4s  ", "-"
    }
  }

  if($s) {
    $i1 = $d{Bus};
    $i1 = "CPU" if "$d{Class}$d{SubClass}" eq "10103";
    $i1 = "BIOS" if "$d{Class}$d{SubClass}" eq "10105";
    $i1 = "Monitor" if "$d{Class}" eq "100";
    $t = sprintf "%8s  %3s:%s", $i1, $d{Class}, $d{SubClass};
    print "$t  $s\n";
  }

  return
}

sub split_it { return split " ", @_[0] }
